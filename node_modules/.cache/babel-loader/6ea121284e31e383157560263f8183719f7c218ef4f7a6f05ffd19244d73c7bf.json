{"ast":null,"code":"var _jsxFileName = \"/Users/shivakhanduri/quiz-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport questionsData from '/Users/shivakhanduri/quiz-app/src/questions_output.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [showCorrectAnswer, setShowCorrectAnswer] = useState(false);\n  const [score, setScore] = useState(0);\n  const [isQuizOver, setIsQuizOver] = useState(false);\n  const handleAnswerSelect = answer => {\n    setSelectedAnswer(answer); // Set the selected answer\n  };\n  const handleSubmitAnswer = () => {\n    setShowCorrectAnswer(true);\n\n    // Remove the option prefix (e.g., 'A.', 'B.', etc.) for comparison\n    const cleanedSelectedAnswer = selectedAnswer.replace(/^([A-D]\\.\\s)/, '');\n    const correctAnswer = questionsData[currentQuestion].correctAnswer;\n    if (cleanedSelectedAnswer === correctAnswer) {\n      setScore(score + 1);\n    }\n  };\n  const handleNextQuestion = () => {\n    setShowCorrectAnswer(false);\n    setSelectedAnswer('');\n    if (currentQuestion < questionsData.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      setIsQuizOver(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), !isQuizOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-question\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: questionsData[currentQuestion].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: questionsData[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleAnswerSelect(option),\n          className: `quiz-option ${selectedAnswer === option ? 'selected' : ''}`,\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmitAnswer,\n        disabled: !selectedAnswer,\n        children: \"Submit Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), showCorrectAnswer && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback\",\n        children: [selectedAnswer.replace(/^([A-D]\\.\\s)/, '') === questionsData[currentQuestion].correctAnswer ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"correct\",\n          children: \"Correct!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"incorrect\",\n          children: [\"Incorrect! The correct answer is: \", questionsData[currentQuestion].correctAnswer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextQuestion,\n          children: \"Next Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), isQuizOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quiz Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your score: \", score, \"/\", questionsData.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"wZe2jEpWOFcCeeiWCRSGs6WXVEM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","questionsData","jsxDEV","_jsxDEV","App","_s","currentQuestion","setCurrentQuestion","selectedAnswer","setSelectedAnswer","showCorrectAnswer","setShowCorrectAnswer","score","setScore","isQuizOver","setIsQuizOver","handleAnswerSelect","answer","handleSubmitAnswer","cleanedSelectedAnswer","replace","correctAnswer","handleNextQuestion","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","question","options","map","option","index","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/shivakhanduri/quiz-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport questionsData from '/Users/shivakhanduri/quiz-app/src/questions_output.json';\n\nconst App = () => {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [showCorrectAnswer, setShowCorrectAnswer] = useState(false);\n  const [score, setScore] = useState(0);\n  const [isQuizOver, setIsQuizOver] = useState(false);\n\n  const handleAnswerSelect = (answer) => {\n    setSelectedAnswer(answer);  // Set the selected answer\n  };\n\n  const handleSubmitAnswer = () => {\n    setShowCorrectAnswer(true);\n\n    // Remove the option prefix (e.g., 'A.', 'B.', etc.) for comparison\n    const cleanedSelectedAnswer = selectedAnswer.replace(/^([A-D]\\.\\s)/, '');\n    const correctAnswer = questionsData[currentQuestion].correctAnswer;\n\n    if (cleanedSelectedAnswer === correctAnswer) {\n      setScore(score + 1);\n    }\n  };\n\n  const handleNextQuestion = () => {\n    setShowCorrectAnswer(false);\n    setSelectedAnswer('');\n\n    if (currentQuestion < questionsData.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      setIsQuizOver(true);\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1>Quiz Application</h1>\n      {!isQuizOver && (\n        <div className=\"quiz-question\">\n          <h2>{questionsData[currentQuestion].question}</h2>\n          <ul>\n            {questionsData[currentQuestion].options.map((option, index) => (\n              <li\n                key={index}\n                onClick={() => handleAnswerSelect(option)}\n                className={`quiz-option ${selectedAnswer === option ? 'selected' : ''}`}\n              >\n                {option}\n              </li>\n            ))}\n          </ul>\n\n          {/* Button to submit the selected answer */}\n          <button onClick={handleSubmitAnswer} disabled={!selectedAnswer}>\n            Submit Answer\n          </button>\n\n          {showCorrectAnswer && (\n            <div className=\"feedback\">\n              {selectedAnswer.replace(/^([A-D]\\.\\s)/, '') === questionsData[currentQuestion].correctAnswer ? (\n                <p className=\"correct\">Correct!</p>\n              ) : (\n                <p className=\"incorrect\">\n                  Incorrect! The correct answer is: {questionsData[currentQuestion].correctAnswer}\n                </p>\n              )}\n              <button onClick={handleNextQuestion}>Next Question</button>\n            </div>\n          )}\n        </div>\n      )}\n\n      {isQuizOver && (\n        <div>\n          <h2>Quiz Over!</h2>\n          <p>Your score: {score}/{questionsData.length}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,yDAAyD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpF,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACU,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMgB,kBAAkB,GAAIC,MAAM,IAAK;IACrCR,iBAAiB,CAACQ,MAAM,CAAC,CAAC,CAAE;EAC9B,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/BP,oBAAoB,CAAC,IAAI,CAAC;;IAE1B;IACA,MAAMQ,qBAAqB,GAAGX,cAAc,CAACY,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC;IACxE,MAAMC,aAAa,GAAGpB,aAAa,CAACK,eAAe,CAAC,CAACe,aAAa;IAElE,IAAIF,qBAAqB,KAAKE,aAAa,EAAE;MAC3CR,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACrB;EACF,CAAC;EAED,MAAMU,kBAAkB,GAAGA,CAAA,KAAM;IAC/BX,oBAAoB,CAAC,KAAK,CAAC;IAC3BF,iBAAiB,CAAC,EAAE,CAAC;IAErB,IAAIH,eAAe,GAAGL,aAAa,CAACsB,MAAM,GAAG,CAAC,EAAE;MAC9ChB,kBAAkB,CAACD,eAAe,GAAG,CAAC,CAAC;IACzC,CAAC,MAAM;MACLS,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKqB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BtB,OAAA;MAAAsB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxB,CAACf,UAAU,iBACVX,OAAA;MAAKqB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BtB,OAAA;QAAAsB,QAAA,EAAKxB,aAAa,CAACK,eAAe,CAAC,CAACwB;MAAQ;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAClD1B,OAAA;QAAAsB,QAAA,EACGxB,aAAa,CAACK,eAAe,CAAC,CAACyB,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACxD/B,OAAA;UAEEgC,OAAO,EAAEA,CAAA,KAAMnB,kBAAkB,CAACiB,MAAM,CAAE;UAC1CT,SAAS,EAAE,eAAehB,cAAc,KAAKyB,MAAM,GAAG,UAAU,GAAG,EAAE,EAAG;UAAAR,QAAA,EAEvEQ;QAAM,GAJFC,KAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKR,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eAGL1B,OAAA;QAAQgC,OAAO,EAAEjB,kBAAmB;QAACkB,QAAQ,EAAE,CAAC5B,cAAe;QAAAiB,QAAA,EAAC;MAEhE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAERnB,iBAAiB,iBAChBP,OAAA;QAAKqB,SAAS,EAAC,UAAU;QAAAC,QAAA,GACtBjB,cAAc,CAACY,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,KAAKnB,aAAa,CAACK,eAAe,CAAC,CAACe,aAAa,gBAC1FlB,OAAA;UAAGqB,SAAS,EAAC,SAAS;UAAAC,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,gBAEnC1B,OAAA;UAAGqB,SAAS,EAAC,WAAW;UAAAC,QAAA,GAAC,oCACW,EAACxB,aAAa,CAACK,eAAe,CAAC,CAACe,aAAa;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9E,CACJ,eACD1B,OAAA;UAAQgC,OAAO,EAAEb,kBAAmB;UAAAG,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN,EAEAf,UAAU,iBACTX,OAAA;MAAAsB,QAAA,gBACEtB,OAAA;QAAAsB,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnB1B,OAAA;QAAAsB,QAAA,GAAG,cAAY,EAACb,KAAK,EAAC,GAAC,EAACX,aAAa,CAACsB,MAAM;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CAhFID,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAkFT,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}