{"ast":null,"code":"var _jsxFileName = \"/Users/shivakhanduri/quiz-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport questionsData from '/Users/shivakhanduri/quiz-app/src/questions_output.json'; // Ensure the correct path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [showCorrectAnswer, setShowCorrectAnswer] = useState(false);\n  const [score, setScore] = useState(0);\n  const [isQuizOver, setIsQuizOver] = useState(false);\n\n  // Ensure that questionsData is not empty and currentQuestion exists\n  if (!questionsData || !questionsData[currentQuestion]) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n  const handleAnswerSelect = answer => {\n    setSelectedAnswer(answer);\n    setShowCorrectAnswer(true);\n\n    // Check if the selected answer is correct\n    if (answer === questionsData[currentQuestion].correctAnswer) {\n      setScore(score + 1);\n    }\n  };\n  const handleNextQuestion = () => {\n    setShowCorrectAnswer(false);\n    setSelectedAnswer('');\n    if (currentQuestion < questionsData.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      setIsQuizOver(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), !isQuizOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-question\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: questionsData[currentQuestion].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: questionsData[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleAnswerSelect(option),\n          className: \"quiz-option\",\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), showCorrectAnswer && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback\",\n        children: [selectedAnswer === questionsData[currentQuestion].correctAnswer ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"correct\",\n          children: \"Correct!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"incorrect\",\n          children: [\"Incorrect! The correct answer is: \", questionsData[currentQuestion].correctAnswer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextQuestion,\n          children: \"Next Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), isQuizOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quiz Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your score: \", score, \"/\", questionsData.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"wZe2jEpWOFcCeeiWCRSGs6WXVEM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","questionsData","jsxDEV","_jsxDEV","App","_s","currentQuestion","setCurrentQuestion","selectedAnswer","setSelectedAnswer","showCorrectAnswer","setShowCorrectAnswer","score","setScore","isQuizOver","setIsQuizOver","children","fileName","_jsxFileName","lineNumber","columnNumber","handleAnswerSelect","answer","correctAnswer","handleNextQuestion","length","className","question","options","map","option","index","onClick","_c","$RefreshReg$"],"sources":["/Users/shivakhanduri/quiz-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport questionsData from '/Users/shivakhanduri/quiz-app/src/questions_output.json';  // Ensure the correct path\n\nconst App = () => {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [showCorrectAnswer, setShowCorrectAnswer] = useState(false);\n  const [score, setScore] = useState(0);\n  const [isQuizOver, setIsQuizOver] = useState(false);\n\n  // Ensure that questionsData is not empty and currentQuestion exists\n  if (!questionsData || !questionsData[currentQuestion]) {\n    return <div>Loading questions...</div>;\n  }\n\n  const handleAnswerSelect = (answer) => {\n    setSelectedAnswer(answer);\n    setShowCorrectAnswer(true);\n\n    // Check if the selected answer is correct\n    if (answer === questionsData[currentQuestion].correctAnswer) {\n      setScore(score + 1);\n    }\n  };\n\n  const handleNextQuestion = () => {\n    setShowCorrectAnswer(false);\n    setSelectedAnswer('');\n\n    if (currentQuestion < questionsData.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      setIsQuizOver(true);\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1>Quiz Application</h1>\n      {!isQuizOver && (\n        <div className=\"quiz-question\">\n          <h2>{questionsData[currentQuestion].question}</h2>\n          <ul>\n            {questionsData[currentQuestion].options.map((option, index) => (\n              <li key={index} onClick={() => handleAnswerSelect(option)} className=\"quiz-option\">\n                {option}\n              </li>\n            ))}\n          </ul>\n\n          {showCorrectAnswer && (\n  <div className=\"feedback\">\n    {selectedAnswer === questionsData[currentQuestion].correctAnswer ? (\n      <p className=\"correct\">Correct!</p>\n    ) : (\n      <p className=\"incorrect\">\n        Incorrect! The correct answer is: {questionsData[currentQuestion].correctAnswer}\n      </p>\n    )}\n    <button onClick={handleNextQuestion}>Next Question</button>\n  </div>\n)}\n        </div>\n      )}\n\n      {isQuizOver && (\n        <div>\n          <h2>Quiz Over!</h2>\n          <p>Your score: {score}/{questionsData.length}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}