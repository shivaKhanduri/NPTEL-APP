{"ast":null,"code":"var _jsxFileName = \"/Users/shivakhanduri/quiz-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport questionsData from 'src/nptel_questions.json'; // Import the JSON data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [showCorrectAnswer, setShowCorrectAnswer] = useState(false);\n  const [score, setScore] = useState(0);\n  const [isQuizOver, setIsQuizOver] = useState(false);\n  const handleAnswerSelect = answer => {\n    setSelectedAnswer(answer);\n    setShowCorrectAnswer(true);\n\n    // Check if the selected answer is correct\n    if (answer === questionsData[currentQuestion].correctAnswer) {\n      setScore(score + 1);\n    }\n  };\n  const handleNextQuestion = () => {\n    setShowCorrectAnswer(false);\n    setSelectedAnswer('');\n    if (currentQuestion < questionsData.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      setIsQuizOver(true);\n    }\n  };\n  useEffect(() => {\n    // Reset when the quiz is over\n    if (isQuizOver) {\n      alert(`Quiz over! Your score is ${score}/${questionsData.length}`);\n    }\n  }, [isQuizOver, score]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), !isQuizOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-question\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: questionsData[currentQuestion].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: questionsData[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleAnswerSelect(option),\n          className: \"quiz-option\",\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), showCorrectAnswer && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback\",\n        children: [selectedAnswer === questionsData[currentQuestion].correctAnswer ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"correct\",\n          children: \"Correct!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"incorrect\",\n          children: [\"Incorrect! The correct answer is: \", questionsData[currentQuestion].correctAnswer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextQuestion,\n          children: \"Next Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"GCwGPPep0xsoWMVIbxWw+yqbXUM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","questionsData","jsxDEV","_jsxDEV","App","_s","currentQuestion","setCurrentQuestion","selectedAnswer","setSelectedAnswer","showCorrectAnswer","setShowCorrectAnswer","score","setScore","isQuizOver","setIsQuizOver","handleAnswerSelect","answer","correctAnswer","handleNextQuestion","length","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","question","options","map","option","index","onClick","_c","$RefreshReg$"],"sources":["/Users/shivakhanduri/quiz-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport questionsData from 'src/nptel_questions.json';  // Import the JSON data\n\nconst App = () => {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [showCorrectAnswer, setShowCorrectAnswer] = useState(false);\n  const [score, setScore] = useState(0);\n  const [isQuizOver, setIsQuizOver] = useState(false);\n\n  const handleAnswerSelect = (answer) => {\n    setSelectedAnswer(answer);\n    setShowCorrectAnswer(true);\n\n    // Check if the selected answer is correct\n    if (answer === questionsData[currentQuestion].correctAnswer) {\n      setScore(score + 1);\n    }\n  };\n\n  const handleNextQuestion = () => {\n    setShowCorrectAnswer(false);\n    setSelectedAnswer('');\n\n    if (currentQuestion < questionsData.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      setIsQuizOver(true);\n    }\n  };\n\n  useEffect(() => {\n    // Reset when the quiz is over\n    if (isQuizOver) {\n      alert(`Quiz over! Your score is ${score}/${questionsData.length}`);\n    }\n  }, [isQuizOver, score]);\n\n  return (\n    <div className=\"app-container\">\n      <h1>Quiz Application</h1>\n      {!isQuizOver && (\n        <div className=\"quiz-question\">\n          <h2>{questionsData[currentQuestion].question}</h2>\n          <ul>\n            {questionsData[currentQuestion].options.map((option, index) => (\n              <li key={index} onClick={() => handleAnswerSelect(option)} className=\"quiz-option\">\n                {option}\n              </li>\n            ))}\n          </ul>\n\n          {showCorrectAnswer && (\n            <div className=\"feedback\">\n              {selectedAnswer === questionsData[currentQuestion].correctAnswer ? (\n                <p className=\"correct\">Correct!</p>\n              ) : (\n                <p className=\"incorrect\">\n                  Incorrect! The correct answer is: {questionsData[currentQuestion].correctAnswer}\n                </p>\n              )}\n              <button onClick={handleNextQuestion}>Next Question</button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}